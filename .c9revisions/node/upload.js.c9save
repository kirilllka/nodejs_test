{"ts":1344362817382,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1344362830642,"patch":[[{"diffs":[[1,"var http = require('http');\nvar multipart = require('multipart');\nvar sys = require('sys');\n\nvar server = http.createServer(function(req, res) {\n  switch (req.uri.path) {\n    case '/':\n      display_form(req, res);\n      break;\n    case '/upload':\n      upload_file(req, res);\n      break;\n    default:\n      show_404(req, res);\n      break;\n  }\n});\nserver.listen(8000);\n\nfunction display_form(req, res) {\n  res.sendHeader(200, {'Content-Type': 'text/html'});\n  res.sendBody(\n    '<form action=\"/upload\" method=\"post\" enctype=\"multipart/form-data\">'+\n    '<input type=\"file\" name=\"upload-file\">'+\n    '<input type=\"submit\" value=\"Upload\">'+\n    '</form>'\n  );\n  res.finish();\n}\n\nfunction upload_file(req, res) {\n  req.setBodyEncoding('binary');\n\n  var stream = new multipart.Stream(req);\n  stream.addListener('part', function(part) {\n    part.addListener('body', function(chunk) {\n      var progress = (stream.bytesReceived / stream.bytesTotal * 100).toFixed(2);\n      var mb = (stream.bytesTotal / 1024 / 1024).toFixed(1);\n\n      sys.print(\"Uploading \"+mb+\"mb (\"+progress+\"%)\\015\");\n\n      // chunk could be appended to a file if the uploaded file needs to be saved\n    });\n  });\n  stream.addListener('complete', function() {\n    res.sendHeader(200, {'Content-Type': 'text/plain'});\n    res.sendBody('Thanks for playing!');\n    res.finish();\n    sys.puts(\"\\n=> Done\");\n  });\n}\n\nfunction show_404(req, res) {\n  res.sendHeader(404, {'Content-Type': 'text/plain'});\n  res.sendBody('You r doing it rong!');\n  res.finish();\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1522}]],"length":1522,"saved":false}
{"ts":1344362897830,"patch":[[{"diffs":[[0,"ten("],[-1,"8000"],[1,"process.env.PORT"],[0,");\n\n"]],"start1":360,"start2":360,"length1":12,"length2":24}]],"length":1534,"saved":false}
